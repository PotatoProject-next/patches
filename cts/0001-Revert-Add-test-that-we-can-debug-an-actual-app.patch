From 723dcf68506956a18f6ac3a958ac2f807c7ecd13 Mon Sep 17 00:00:00 2001
From: Kshitij Gupta <kshitijgm@gmail.com>
Date: Sat, 10 Aug 2019 23:50:32 +0530
Subject: [PATCH] Revert "Add test that we can debug an actual app."

This reverts commit 75fafc25471bf148d08c3b690fc7d9f78dacfa5d.
- Fixes:
    error: cts/hostsidetests/jdwptunnel/Android.bp:15:1:
    "CtsJdwpTunnelHostTestCases" depends on undefined module "jdi-support"
- "jdi-support" doesn't appear on any branches/tags yet; possibly a new
  external/* repo?

Change-Id: I43b94f007d89511a6e153157cf78ce062ce33077
---
 hostsidetests/jdwptunnel/Android.bp           |  41 ----
 hostsidetests/jdwptunnel/AndroidTest.xml      |  25 ---
 hostsidetests/jdwptunnel/sampleapp/Android.bp |  37 ----
 .../jdwptunnel/sampleapp/AndroidManifest.xml  |  31 ---
 .../sampleapp/res/layout/sample_layout.xml    |  19 --
 .../sampleapp/SampleDeviceActivity.java       |  33 ---
 .../jdwptunnel/cts/JdwpTunnelTest.java        | 193 ------------------
 7 files changed, 379 deletions(-)
 delete mode 100644 hostsidetests/jdwptunnel/Android.bp
 delete mode 100644 hostsidetests/jdwptunnel/AndroidTest.xml
 delete mode 100644 hostsidetests/jdwptunnel/sampleapp/Android.bp
 delete mode 100755 hostsidetests/jdwptunnel/sampleapp/AndroidManifest.xml
 delete mode 100644 hostsidetests/jdwptunnel/sampleapp/res/layout/sample_layout.xml
 delete mode 100644 hostsidetests/jdwptunnel/sampleapp/src/android/jdwptunnel/sampleapp/SampleDeviceActivity.java
 delete mode 100644 hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java

diff --git a/hostsidetests/jdwptunnel/Android.bp b/hostsidetests/jdwptunnel/Android.bp
deleted file mode 100644
index 291dbd3168..0000000000
--- a/hostsidetests/jdwptunnel/Android.bp
+++ /dev/null
@@ -1,41 +0,0 @@
-// Copyright (C) 2019 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-java_test_host {
-    name: "CtsJdwpTunnelHostTestCases",
-    defaults: ["cts_defaults"],
-
-    srcs: ["src/**/*.java"],
-
-    libs: [
-        "cts-tradefed",
-        "tradefed",
-        "jdi-support",
-    ],
-
-    data: [
-        // Include the JDI classes in the testcases directory.
-        ":jdi-support",
-    ],
-
-    // Tag this module as a cts test artifact
-    test_suites: [
-        "cts",
-        "vts",
-        "general-tests",
-    ],
-
-    // LOCAL_CTS_TEST_PACKAGE := android.host.jdwptunnel
-
-}
diff --git a/hostsidetests/jdwptunnel/AndroidTest.xml b/hostsidetests/jdwptunnel/AndroidTest.xml
deleted file mode 100644
index 434d5ac045..0000000000
--- a/hostsidetests/jdwptunnel/AndroidTest.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2019 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<configuration description="Config for the CTS JDWP tunnel host test cases">
-    <option name="config-descriptor:metadata" key="parameter" value="not_instant_app" />
-    <option name="config-descriptor:metadata" key="parameter" value="multi_abi" />
-    <option name="config-descriptor:metadata" key="component" value="art" />
-    <option name="test-suite-tag" value="cts" />
-    <test class="com.android.compatibility.common.tradefed.testtype.JarHostTest" >
-        <option name="jar" value="CtsJdwpTunnelHostTestCases.jar" />
-        <option name="runtime-hint" value="20s" />
-    </test>
-</configuration>
diff --git a/hostsidetests/jdwptunnel/sampleapp/Android.bp b/hostsidetests/jdwptunnel/sampleapp/Android.bp
deleted file mode 100644
index f932fa93f6..0000000000
--- a/hostsidetests/jdwptunnel/sampleapp/Android.bp
+++ /dev/null
@@ -1,37 +0,0 @@
-// Copyright (C) 2019 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-android_test_helper_app {
-    name: "CtsJdwpTunnelSampleApp",
-
-    dex_preopt: {
-        enabled: false,
-    },
-
-    optimize: {
-        enabled: false,
-    },
-
-    srcs: ["src/**/*.java"],
-
-    // tag this module as a cts test artifact
-    test_suites: [
-        "cts",
-        "vts",
-        "general-tests",
-    ],
-
-    sdk_version: "current",
-
-}
diff --git a/hostsidetests/jdwptunnel/sampleapp/AndroidManifest.xml b/hostsidetests/jdwptunnel/sampleapp/AndroidManifest.xml
deleted file mode 100755
index 67dd17d77d..0000000000
--- a/hostsidetests/jdwptunnel/sampleapp/AndroidManifest.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
- * Copyright (C) 2019 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- -->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="android.jdwptunnel.sampleapp">
-
-    <application android:debuggable="true">
-        <activity android:name=".SampleDeviceActivity" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-    </application>
-
-</manifest>
-
diff --git a/hostsidetests/jdwptunnel/sampleapp/res/layout/sample_layout.xml b/hostsidetests/jdwptunnel/sampleapp/res/layout/sample_layout.xml
deleted file mode 100644
index f4adcf3557..0000000000
--- a/hostsidetests/jdwptunnel/sampleapp/res/layout/sample_layout.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<!-- Copyright (C) 2019 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-</RelativeLayout>
diff --git a/hostsidetests/jdwptunnel/sampleapp/src/android/jdwptunnel/sampleapp/SampleDeviceActivity.java b/hostsidetests/jdwptunnel/sampleapp/src/android/jdwptunnel/sampleapp/SampleDeviceActivity.java
deleted file mode 100644
index ff3142d4dc..0000000000
--- a/hostsidetests/jdwptunnel/sampleapp/src/android/jdwptunnel/sampleapp/SampleDeviceActivity.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (C) 2019 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package android.jdwptunnel.sampleapp;
-
-import android.app.Activity;
-import android.os.Bundle;
-
-/**
- * A simple activity which does nothing.
- *
- * <p>This serves as a simple target application/activity to attach a debugger to.
- */
-public final class SampleDeviceActivity extends Activity {
-    @Override
-    public void onCreate(Bundle icicle) {
-        super.onCreate(icicle);
-        setContentView(R.layout.sample_layout);
-    }
-}
diff --git a/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java b/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java
deleted file mode 100644
index 518a1c53fa..0000000000
--- a/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java
+++ /dev/null
@@ -1,193 +0,0 @@
-/*
- * Copyright (C) 2019 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package android.jdwptunnel.cts;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-
-import com.android.tradefed.device.DeviceNotAvailableException;
-import com.android.tradefed.device.ITestDevice;
-import com.android.tradefed.testtype.DeviceJUnit4ClassRunner;
-import com.android.tradefed.testtype.junit4.BaseHostJUnit4Test;
-
-import com.sun.jdi.Bootstrap;
-import com.sun.jdi.ReferenceType;
-import com.sun.jdi.VirtualMachine;
-import com.sun.jdi.VirtualMachineManager;
-import com.sun.jdi.connect.AttachingConnector;
-import com.sun.jdi.connect.Connector;
-import com.sun.jdi.event.ClassPrepareEvent;
-import com.sun.jdi.request.BreakpointRequest;
-import com.sun.jdi.request.ClassPrepareRequest;
-import com.sun.jdi.request.EventRequest;
-import com.sun.jdi.request.EventRequestManager;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
-import java.time.Instant;
-import java.util.Map;
-
-/**
- * Host-side tests for setting up a JDWP connection to an app.
- *
- * <p>This test ensures that it is possible to attach a debugger to an app using 'adb' and perform
- * at least some basic debugging actions.
- *
- * <p>The {@link SampleDeviceActivity} is the activity we are debugging.
- *
- * <p>We will start that activity with 'wait-for-debugger', set a breakpoint on the first line of
- * the {@code onCreate} method and wait for the breakpoint to be hit.
- *
- * <p>Run with: atest CtsJdwpTunnelHostTestCases
- */
-@RunWith(DeviceJUnit4ClassRunner.class)
-public class JdwpTunnelTest extends BaseHostJUnit4Test {
-    private static final String TEST_APP_PACKAGE_NAME = "android.jdwptunnel.sampleapp";
-    private static final String TEST_APP_ACTIVITY_CLASS_NAME = "SampleDeviceActivity";
-    private final static String TEST_APP_FULL_CLASS_NAME =
-            TEST_APP_PACKAGE_NAME + "." + TEST_APP_ACTIVITY_CLASS_NAME;
-
-    private ITestDevice mDevice;
-
-    @Before
-    public void setUp() throws Exception {
-        installPackage("CtsJdwpTunnelSampleApp.apk");
-        mDevice = getDevice();
-    }
-
-    private void moveToHomeScreen() throws Exception {
-        // Wakeup the device if it is on the lockscreen and move it to the home screen.
-        mDevice.executeShellCommand("input keyevent KEYCODE_WAKEUP");
-        mDevice.executeShellCommand("wm dismiss-keyguard");
-        mDevice.executeShellCommand("input keyevent KEYCODE_HOME");
-    }
-
-    private VirtualMachine getDebuggerConnection(String port) throws Exception {
-        VirtualMachineManager vmm = Bootstrap.virtualMachineManager();
-        AttachingConnector conn =
-                vmm.attachingConnectors().stream()
-                        .filter((x) -> x.transport().name().equals("dt_socket"))
-                        .findFirst()
-                        .orElseThrow(
-                                () -> new Error("Could not find dt_socket connector!"));
-        Map<String, Connector.Argument> params = conn.defaultArguments();
-        params.get("port").setValue(port);
-        params.get("hostname").setValue("localhost");
-        // Timeout after 1 minute
-        params.get("timeout").setValue("60000");
-        return conn.attach(params);
-    }
-
-    private String forwardJdwp(String pid) throws Exception {
-        // Try to have adb figure out the port number.
-        String result = mDevice.executeAdbCommand("forward", "tcp:0", "jdwp:" + pid);
-        if (result != null) {
-            return result.trim();
-        }
-        // We might be using an ancient adb. Try using a static port number instead. Number chosen
-        // arbitrarially. '15002' does not appear in any file as anything resembling a port number
-        // as far as I can tell.
-        final String port = "15002";
-        result = mDevice.executeAdbCommand("forward", "tcp:" + port, "jdwp:" + pid);
-        assertTrue(result != null);
-        return port;
-    }
-
-    private VirtualMachine startupTest() throws Exception {
-        moveToHomeScreen();
-        mDevice.executeShellCommand("cmd activity start-activity -D -W -n " +
-                TEST_APP_PACKAGE_NAME + "/." + TEST_APP_ACTIVITY_CLASS_NAME);
-        // Don't keep trying after a minute.
-        final Instant deadline = Instant.now().plusSeconds(60);
-        String pid = "";
-        while ((pid = mDevice.executeShellCommand(
-                    "pidof " + TEST_APP_PACKAGE_NAME).trim()).equals("")) {
-            if (Instant.now().isAfter(deadline)) {
-                fail("Unable to find PID of " + TEST_APP_PACKAGE_NAME + " process!");
-            }
-            // Wait 1 second and try again.
-            Thread.sleep(1000);
-        }
-        String port = forwardJdwp(pid);
-        assertTrue(!"".equals(port));
-        return getDebuggerConnection(port);
-    }
-
-    /**
-     * Tests that we can attach a debugger and perform basic debugging functions.
-     *
-     * We start the app with Wait-for-debugger. Wait for the ClassPrepare of the activity class and
-     * put and wait for a breakpoint on the onCreate function.
-     *
-     * TODO: We should expand this to more functions.
-     */
-    @Test
-    public void testAttachDebugger() throws DeviceNotAvailableException, Exception {
-        VirtualMachine vm = startupTest();
-        EventRequestManager erm = vm.eventRequestManager();
-        try {
-            // Just pause the runtime so it won't get ahead of us while we setup everything.
-            vm.suspend();
-            // Overall timeout for this whole test. 2-minutes
-            final Instant deadline = Instant.now().plusSeconds(120);
-            // Check the test-activity class is not already loaded.
-            assertTrue(TEST_APP_ACTIVITY_CLASS_NAME + " is not yet loaded!",
-                    vm.allClasses().stream()
-                            .noneMatch(x -> x.name().equals(TEST_APP_FULL_CLASS_NAME)));
-
-            // Wait for the class to load.
-            ClassPrepareRequest cpr = erm.createClassPrepareRequest();
-            cpr.addClassFilter(TEST_APP_FULL_CLASS_NAME);
-            cpr.setSuspendPolicy(EventRequest.SUSPEND_ALL);
-            cpr.enable();
-            vm.resume();
-            ReferenceType activityType = null;
-            while (activityType == null) {
-                if (Instant.now().isAfter(deadline)) {
-                    fail(TEST_APP_FULL_CLASS_NAME + " did not load within timeout!");
-                }
-                activityType = vm.eventQueue().remove().stream()
-                        .filter(e -> cpr == e.request())
-                        .findFirst()
-                        .map(e -> ((ClassPrepareEvent) e).referenceType())
-                        .orElse(null);
-            }
-            cpr.disable();
-            // Set a breakpoint on the onCreate method at the first line.
-            BreakpointRequest bpr = erm.createBreakpointRequest(
-                    activityType.methodsByName("onCreate").get(0).allLineLocations().get(0));
-            bpr.setSuspendPolicy(EventRequest.SUSPEND_ALL);
-            bpr.enable();
-            vm.resume();
-
-            // Wait for the event.
-            while (!vm.eventQueue().remove().stream().anyMatch(e -> e.request() == bpr)) {
-                if (Instant.now().isAfter(deadline)) {
-                    fail(TEST_APP_FULL_CLASS_NAME + " did hit onCreate breakpoint within timeout!");
-                }
-            }
-            bpr.disable();
-            vm.resume();
-        } finally {
-            // Always cleanup.
-            vm.dispose();
-        }
-    }
-}
-- 
2.22.0

